install.packages("devtools")
install.packages("KernSmooth")
library(KernSmooth)
library(devtools)
find_rtools()
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
q()
library(swirl)
swirl()
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[[1]]}, c(8, 4, 0))
evaluate(function(x){x[[length(x)]]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Roger","over")
submit()
submit()
mad_libs(c(place = "Your Mom", adjective = "shitty", noun = "erection"))
submit()
'I'%p%'love'%p%'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
hist(y)
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
read.csv(path2csv, stringsAsFactors = F)
mydf <- read.csv(path2csv, stringsAsFactors = F)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
library(swirl)
swirl()
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
subit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
?mutate
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?select
?separate
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
nrow(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks =  100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12)
abline(v = 12, lwd = 2)
abline(v = median(ppm), lwd = 4, col = "magenta")
names(pollution)
setwd("C:/Users/Tyler/Coursera/Data Science Specialization/Exploratory Data Analysis/ExData_Plotting1")
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
str(power)
head(power)
?strptime
datetime <- paste(power$Date, power$Time)
head(datetime)
datetime <- strptime(datetime, "%d/%m/%Y %H:%M:%S")
head(datetime)
power <- c(datetime,power)
power <- cbind(datetime, power)
head(power)
class(power$datetime)
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
power <- cbind(strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S"), power)
?hist
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power", breaks = 15)
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
options(scipen=7)
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
as.Date(power$`strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S")`)
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
datetime <- strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S")
power <- cbind(datetime, power)
subset(power, as.Date(datetime) == "2007-02-01" | as.Date(datetime) == "2007-02-02")
power <- subset(power, as.Date(datetime) == "2007-02-01" | as.Date(datetime) == "2007-02-02")
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
?png
png("plot1.png")
dev.cur()
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
dev.off()
plot(power$datetime, power$Global_active_power)
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Global_active_power, type = "n")
lines(power$datetime, power$Global_active_power)
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
datetime <- strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S")
power <- cbind(datetime, power)
power <- subset(power, as.Date(datetime, tz = "CST") == "2007-02-01" | as.Date(datetime, tz = "CST") == "2007-02-02")
head(datetime)
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
datetime <- strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S", tz = "UTC")
power <- cbind(datetime, power)
power <- subset(power, as.Date(datetime) == "2007-02-01" | as.Date(datetime) == "2007-02-02")
plot(power$datetime, power$Global_active_power, type = "n")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(power$datetime, power$Global_active_power)
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
datetime <- strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S", tz = "UTC")
power <- cbind(datetime, power)
power <- subset(power, as.Date(datetime) == "2007-02-01" | as.Date(datetime) == "2007-02-02")
png("plot1.png")
hist(power$Global_active_power, col="red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
dev.off()
rm(datetime)
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
datetime <- strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S", tz = "UTC")
power <- cbind(datetime, power)
power <- subset(power, as.Date(datetime) == "2007-02-01" | as.Date(datetime) == "2007-02-02")
rm(datetime)
png("plot2.png")
plot(power$datetime, power$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(power$datetime, power$Global_active_power)
dev.off()
plot(power$datetime, power$Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(power$datetime, power$Sub_metering_1)
lines(power$datetime, power$Sub_metering_2, col = "red")
lines(power$datetime, power$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"))
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"), pch = c(1,1,1))
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"), lty = c(1,1,1))
plot(power$datetime, power$Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(power$datetime, power$Sub_metering_1)
lines(power$datetime, power$Sub_metering_2, col = "red")
lines(power$datetime, power$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"), lty = c(1,1,1))
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
datetime <- strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S", tz = "UTC")
power <- cbind(datetime, power)
power <- subset(power, as.Date(datetime) == "2007-02-01" | as.Date(datetime) == "2007-02-02")
rm(datetime)
png("plot3.png")
plot(power$datetime, power$Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(power$datetime, power$Sub_metering_1)
lines(power$datetime, power$Sub_metering_2, col = "red")
lines(power$datetime, power$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"), lty = c(1,1,1))
dev.off()
par(mfcol = c(2,2))
plot(power$datetime, power$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(power$datetime, power$Sub_metering_1)
lines(power$datetime, power$Sub_metering_2, col = "red")
lines(power$datetime, power$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"), lty = c(1,1,1))
plot(power$datetime, power$Voltage, type = "n", xlab = "datetime", ylab = "Voltage")
lines(power$datetime, power$Voltage)
plot(power$datetime, power$Global_reactive_power, type = "n", xlab = "datetime", ylab = "Global_reactive_power")
lines(power$datetime, power$Global_reactive_power)
par(mfcol = c(2,2))
plot(power$datetime, power$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(power$datetime, power$Sub_metering_1)
lines(power$datetime, power$Sub_metering_2, col = "red")
lines(power$datetime, power$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"), lty = c(1,1,1))
plot(power$datetime, power$Voltage, type = "n", xlab = "datetime", ylab = "Voltage")
lines(power$datetime, power$Voltage)
plot(power$datetime, power$Global_reactive_power, type = "n", xlab = "datetime", ylab = "Global_reactive_power")
lines(power$datetime, power$Global_reactive_power)
par(mfcol = c(2,2))
plot(power$datetime, power$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(power$datetime, power$Sub_metering_1)
lines(power$datetime, power$Sub_metering_2, col = "red")
lines(power$datetime, power$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"), lty = c(1,1,1), bty = "n")
plot(power$datetime, power$Voltage, type = "n", xlab = "datetime", ylab = "Voltage")
lines(power$datetime, power$Voltage)
plot(power$datetime, power$Global_reactive_power, type = "n", xlab = "datetime", ylab = "Global_reactive_power")
lines(power$datetime, power$Global_reactive_power)
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", na.strings = "?")
datetime <- strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M:%S", tz = "UTC")
power <- cbind(datetime, power)
power <- subset(power, as.Date(datetime) == "2007-02-01" | as.Date(datetime) == "2007-02-02")
rm(datetime)
png("plot4.png")
par(mfcol = c(2,2))
plot(power$datetime, power$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power")
lines(power$datetime, power$Global_active_power)
plot(power$datetime, power$Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(power$datetime, power$Sub_metering_1)
lines(power$datetime, power$Sub_metering_2, col = "red")
lines(power$datetime, power$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_Metering_1","Sub_Metering_2","Sub_Metering_3"), col = c("black", "red", "blue"), lty = c(1,1,1), bty = "n")
plot(power$datetime, power$Voltage, type = "n", xlab = "datetime", ylab = "Voltage")
lines(power$datetime, power$Voltage)
plot(power$datetime, power$Global_reactive_power, type = "n", xlab = "datetime", ylab = "Global_reactive_power")
lines(power$datetime, power$Global_reactive_power)
dev.off()
